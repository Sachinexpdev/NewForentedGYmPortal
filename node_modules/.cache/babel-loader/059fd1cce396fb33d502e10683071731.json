{"ast":null,"code":"import _regeneratorRuntime from \"/home/development/Downloads/Floey_Frontend-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/development/Downloads/Floey_Frontend-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/development/Downloads/Floey_Frontend-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/development/Downloads/Floey_Frontend-master/src/views/base/Reports/Reports.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport $ from 'jquery';\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CContainer, CJumbotron, CRow, CEmbed, CDropdown, CDropdownToggle, CDropdownDivider, CDropdownHeader, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CDropdownItem, CDropdownMenu, CHeaderNavLink, CEmbedItem } from '@coreui/react';\nimport { DocsLink } from 'src/reusable';\nimport Cookies from 'universal-cookie';\nimport BASE_URL from 'src/views/base';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar cookies = new Cookies();\nconsole.log(cookies.get('gym_uuid'));\n\nvar Classes = function Classes() {\n  _s();\n\n  var monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n  var current = new Date();\n  var last_month = monthNames[current.getMonth() - 1];\n  var sec_las_month = monthNames[current.getMonth() - 2];\n  var third_last_month = monthNames[current.getMonth() - 3]; // console.log(lastmonth)\n\n  var axios = require('axios');\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      getreports = _useState2[0],\n      setreports = _useState2[1];\n\n  function Reports() {\n    return _Reports.apply(this, arguments);\n  }\n\n  function _Reports() {\n    _Reports = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var start_date, end_date, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // setSuccess(false);\n              //  debugger\n              // var form = document.forms[\"regform\"][\"email\"].value;   \n              start_date = document.getElementById(\"start_date\").value;\n              end_date = document.getElementById(\"end_date\").value;\n              console.log('Trying to send request');\n              _context.prev = 3;\n              console.log('Trying');\n              _context.next = 7;\n              return axios.post(BASE_URL + 'gymprofile/dash/', {\n                start_date: start_date,\n                end_date: end_date,\n                gym_id: cookies.get('gym_uuid')\n              });\n\n            case 7:\n              res = _context.sent;\n\n              if (res.status === 200) {\n                //  debugger\n                // test for status you want, etc\n                console.log(res.data.data);\n                setreports(res.data.data); // alert(res.data.message);\n              } //  debugger\n              // Don't forget to return something\n\n\n              return _context.abrupt(\"return\", res.data);\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](3);\n              console.error('Signup Failed , Please try again.');\n              window.location.reload();\n              alert(_context.t0);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 12]]);\n    }));\n    return _Reports.apply(this, arguments);\n  }\n\n  function QuarterlyReports(_x) {\n    return _QuarterlyReports.apply(this, arguments);\n  }\n\n  function _QuarterlyReports() {\n    _QuarterlyReports = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(month) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log('Trying to send request');\n              _context2.prev = 1;\n              console.log('Trying');\n              _context2.next = 5;\n              return axios.post(BASE_URL + 'gymprofile/dash/', {\n                month: month,\n                gym_id: cookies.get('gym_uuid')\n              });\n\n            case 5:\n              res = _context2.sent;\n\n              if (res.status === 200) {\n                //  debugger\n                // test for status you want, etc\n                console.log(res.data.data);\n                setreports(res.data.data); // alert(res.data.message);\n              } //  debugger\n              // Don't forget to return something\n\n\n              return _context2.abrupt(\"return\", res.data);\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error('Signup Failed , Please try again.');\n              window.location.reload();\n              alert(_context2.t0);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 10]]);\n    }));\n    return _QuarterlyReports.apply(this, arguments);\n  }\n\n  function CSVExport(_x2) {\n    return _CSVExport.apply(this, arguments);\n  }\n\n  function _CSVExport() {\n    _CSVExport = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log('Trying to send request');\n              _context3.prev = 1;\n              console.log('Trying');\n              _context3.next = 5;\n              return axios.post(BASE_URL + 'gymprofile/reports/csv/', {\n                data: data,\n                gym_id: cookies.get('gym_uuid')\n              });\n\n            case 5:\n              res = _context3.sent;\n\n              if (res.status === 200) {\n                //  debugger\n                // test for status you want, etc\n                console.log(res.data.data);\n                setreports(res.data.data); // alert(res.data.message);\n              } //  debugger\n              // Don't forget to return something\n\n\n              return _context3.abrupt(\"return\", res.data);\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.error('Signup Failed , Please try again.');\n              window.location.reload();\n              alert(_context3.t0);\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 10]]);\n    }));\n    return _CSVExport.apply(this, arguments);\n  }\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modal = _useState4[0],\n      setModal = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      large = _useState6[0],\n      setLarge = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      small = _useState8[0],\n      setSmall = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      primary = _useState10[0],\n      setPrimary = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      success = _useState12[0],\n      setSuccess = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      warning = _useState14[0],\n      setWarning = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      danger = _useState16[0],\n      setDanger = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      info = _useState18[0],\n      setInfo = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      getclasses = _useState20[0],\n      setgetclasses = _useState20[1];\n\n  var perm = cookies.get('perms');\n\n  if (perm.includes('Reports')) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"manage_top_btn rports-form-top\",\n            children: [/*#__PURE__*/_jsxDEV(CRow, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-5\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Start date :\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 15\n                  }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"form-control\",\n                    id: \"start_date\",\n                    type: \"date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 15\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 17\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-5\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"End date :\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 17\n                  }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"form-control\",\n                    id: \"end_date\",\n                    type: \"date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 17\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 17\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-2\",\n                children: [/*#__PURE__*/_jsxDEV(CButton, {\n                  color: \"primary bt-mr\",\n                  onClick: Reports,\n                  children: \"Generate Reports\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 17\n                }, _this), ' ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n                xs: \"12\",\n                lg: \"12\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"reports-filter-btn\",\n                  children: [/*#__PURE__*/_jsxDEV(CButton, {\n                    color: \"primary\",\n                    onClick: function onClick() {\n                      return QuarterlyReports('prev');\n                    },\n                    children: [\" \", last_month]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(CButton, {\n                    color: \"primary\",\n                    onClick: function onClick() {\n                      return QuarterlyReports('2prev');\n                    },\n                    children: [\" \", sec_las_month]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(CButton, {\n                    color: \"primary\",\n                    onClick: function onClick() {\n                      return QuarterlyReports('3prev');\n                    },\n                    children: [\" \", third_last_month]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 15\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CRow, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 7\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          xs: \"12\",\n          lg: \"12\",\n          children: /*#__PURE__*/_jsxDEV(CCard, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"manage-table-main\",\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  class: \"table\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Total Revenue\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 17\n                      }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Expenses\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 243,\n                        columnNumber: 17\n                      }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"New user count\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 244,\n                        columnNumber: 17\n                      }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Profit/Loss\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 17\n                      }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Action\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 17\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 13\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 13\n                  }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [getreports.total_sales ? /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: getreports.total_sales\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 252,\n                        columnNumber: 41\n                      }, _this) : /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: \"0\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 252,\n                        columnNumber: 75\n                      }, _this), getreports.transactions ? /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: getreports.transactions\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 42\n                      }, _this) : /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: \"0\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 77\n                      }, _this), getreports.user_count ? /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: getreports.user_count\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 40\n                      }, _this) : /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: \"0\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 73\n                      }, _this), getreports.profit ? /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: getreports.profit\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 36\n                      }, _this) : /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: \"0\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 65\n                      }, _this), /*#__PURE__*/_jsxDEV(CButton, {\n                        color: \"primary\",\n                        onClick: function onClick() {\n                          return CSVExport(getreports);\n                        },\n                        children: \"Export to CSV\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 256,\n                        columnNumber: 17\n                      }, _this), ' ']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 13\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 13\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 17\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 11\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 11\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 11\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false);\n  } else {\n    return window.location.href = '#/dashboard';\n  }\n};\n\n_s(Classes, \"MI+SvfPNC/7v+/HyrbyyU9tLzQQ=\");\n\n_c = Classes;\nexport default Classes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Classes\");","map":{"version":3,"sources":["/home/development/Downloads/Floey_Frontend-master/src/views/base/Reports/Reports.js"],"names":["React","useState","useEffect","$","CButton","CCard","CCardBody","CCardHeader","CCol","CContainer","CJumbotron","CRow","CEmbed","CDropdown","CDropdownToggle","CDropdownDivider","CDropdownHeader","CModal","CModalBody","CModalFooter","CModalHeader","CModalTitle","CDropdownItem","CDropdownMenu","CHeaderNavLink","CEmbedItem","DocsLink","Cookies","BASE_URL","cookies","console","log","get","Classes","monthNames","current","Date","last_month","getMonth","sec_las_month","third_last_month","axios","require","getreports","setreports","Reports","start_date","document","getElementById","value","end_date","post","gym_id","res","status","data","error","window","location","reload","alert","QuarterlyReports","month","CSVExport","modal","setModal","large","setLarge","small","setSmall","primary","setPrimary","success","setSuccess","warning","setWarning","danger","setDanger","info","setInfo","getclasses","setgetclasses","perm","includes","total_sales","transactions","user_count","profit","href"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\nimport $ from 'jquery';\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CContainer,\n  CJumbotron,\n  CRow,\n  CEmbed,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownDivider,\n  CDropdownHeader,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CDropdownItem,\n  CDropdownMenu,\n  CHeaderNavLink,\n  CEmbedItem\n} from '@coreui/react'\nimport { DocsLink } from 'src/reusable'\nimport Cookies from 'universal-cookie';\nimport BASE_URL from 'src/views/base';\n\n\nconst cookies = new Cookies();\nconsole.log(cookies.get('gym_uuid'))\n\n\nconst Classes = () => {\n\n  var monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n  \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n\n\n  const current = new Date();\n\nvar last_month = monthNames[current.getMonth()-1]\nvar sec_las_month = monthNames[current.getMonth()-2]\nvar third_last_month = monthNames[current.getMonth()-3]\n\n// console.log(lastmonth)\nconst axios = require('axios');\n\nconst [getreports, setreports] = useState([])\n\n\nasync function Reports() {\n    // setSuccess(false);\n   \n    //  debugger\n    // var form = document.forms[\"regform\"][\"email\"].value;   \n    var start_date = document.getElementById(\"start_date\").value;\n    var end_date = document.getElementById(\"end_date\").value;\n    \n    {  \n       \n        console.log('Trying to send request');\n        \n        try {\n            console.log('Trying');\n            let res = await axios.post(BASE_URL + 'gymprofile/dash/', {\n                start_date:start_date,\n                end_date:end_date,\n                gym_id: cookies.get('gym_uuid'),\n            });\n            if (res.status === 200) {\n                //  debugger\n                // test for status you want, etc\n                console.log(res.data.data);\n                setreports(res.data.data);\n                // alert(res.data.message);\n             \n            }\n            //  debugger\n            // Don't forget to return something\n            return res.data\n        }\n        catch (err) {\n            console.error('Signup Failed , Please try again.');\n            window.location.reload()\n            alert(err);\n        }\n    }\n}\n\nasync function QuarterlyReports(month) {\n  // setSuccess(false);\n \n  //  debugger\n  // var form = document.forms[\"regform\"][\"email\"].value;   \n  // var start_date = document.getElementById(\"start_date\").value;\n  // var end_date = document.getElementById(\"end_date\").value;\n  \n  {\n     \n      console.log('Trying to send request');\n      \n      try {\n          console.log('Trying');\n          let res = await axios.post(BASE_URL + 'gymprofile/dash/', {\n            month:month,\n            gym_id: cookies.get('gym_uuid'),\n          });\n          if (res.status === 200) {\n            //  debugger\n            // test for status you want, etc\n            console.log(res.data.data);\n            setreports(res.data.data);\n            // alert(res.data.message);\n           \n          }\n          //  debugger\n          // Don't forget to return something\n          return res.data\n      }\n      catch (err) {\n          console.error('Signup Failed , Please try again.');\n          window.location.reload()\n          alert(err);\n      }\n  }\n}\n\n\nasync function CSVExport(data){\n  //  debugger\n\n  {\n     \n    console.log('Trying to send request');\n    \n    try {\n        console.log('Trying');\n        let res = await axios.post(BASE_URL + 'gymprofile/reports/csv/', {\n          data:data,\n          gym_id: cookies.get('gym_uuid'),\n        });\n        if (res.status === 200) {\n          //  debugger\n          // test for status you want, etc\n          console.log(res.data.data);\n          setreports(res.data.data);\n          // alert(res.data.message);\n         \n        }\n        //  debugger\n        // Don't forget to return something\n        return res.data\n    }\n    catch (err) {\n        console.error('Signup Failed , Please try again.');\n        window.location.reload()\n        alert(err);\n    }\n}\n}\n\n\n\nconst [modal, setModal] = useState(false)\nconst [large, setLarge] = useState(false)\nconst [small, setSmall] = useState(false)\nconst [primary, setPrimary] = useState(false)\nconst [success, setSuccess] = useState(false)\nconst [warning, setWarning] = useState(false)\nconst [danger, setDanger] = useState(false)\nconst [info, setInfo] = useState(false)\n\nconst [getclasses, setgetclasses] = useState([])\n\n\nvar perm = cookies.get('perms')\n\n  if (perm.includes('Reports')){\n\n  return (\n    <>\n   \n        <CRow>\n      <div className=\"col-md-12\">\n              <div className=\"manage_top_btn rports-form-top\">\n          \n\n                \n              <CRow>\n                <div className=\"col-md-5\">\n                <div className=\"form-group\">\n              <label>Start date :</label> \n              <input className=\"form-control\" id='start_date' type='date'></input>\n              </div>\n                </div>\n              <div className=\"col-md-5\">\n                <div className=\"form-group\">\n                <label>End date :</label> \n                <input className=\"form-control\" id='end_date' type='date'></input>\n                  </div>\n              </div>\n            \n\n              <div className=\"col-md-2\">\n                <CButton color=\"primary bt-mr\" onClick={Reports}>Generate Reports</CButton>{' '}\n              </div>\n\n\n              <CCol xs=\"12\" lg=\"12\">\n                    <div className=\"reports-filter-btn\">\n                    \n                    <CButton color=\"primary\" onClick={()=>QuarterlyReports('prev')} > {last_month}</CButton>\n                    <CButton color=\"primary\" onClick={()=>QuarterlyReports('2prev')} > {sec_las_month}</CButton>\n                    <CButton color=\"primary\" onClick={()=>QuarterlyReports('3prev')} > {third_last_month}</CButton>\n                    </div>\n                </CCol> \n              \n                </CRow>\n\n                <CRow>\n\n\n\n                </CRow>  \n\n              </div>\n              \n          </div>\n        <CCol xs=\"12\" lg=\"12\">\n          <CCard>\n         \n          <div className=\"col-md-12\">\n              \n          <div className=\"manage-table-main\">\n                <table class=\"table\">\n            <thead>\n          \n            <tr>\n                <th>Total Revenue</th>\n                <th>Expenses</th>\n                <th>New user count</th>\n                <th>Profit/Loss</th>\n                <th>Action</th>\n              \n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n                {getreports.total_sales?<td>{getreports.total_sales}</td>:<td>0</td>}\n                {getreports.transactions?<td>{getreports.transactions}</td>:<td>0</td>}\n                {getreports.user_count?<td>{getreports.user_count}</td>:<td>0</td>}\n                {getreports.profit?<td>{getreports.profit}</td>:<td>0</td>}\n                <CButton color=\"primary\" onClick = {()=>CSVExport(getreports)}>Export to CSV</CButton>{' '}\n\n             \n            </tr>\n             </tbody>\n        </table>\n\n    </div>\n        </div>\n\n        \n          </CCard>\n        </CCol>\n      </CRow>\n\n      \n\n    </>\n  )}\n  else{\n    return window.location.href='#/dashboard'\n  }\n}\n\nexport default Classes\n"]},"metadata":{},"sourceType":"module"}